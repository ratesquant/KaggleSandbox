# -*- coding: utf-8 -*-
"""
Created on Wed Dec 23 16:58:00 2020

@author: chirokov
"""
import os
import cProfile
import json
from kaggle_environments import evaluate, make, utils
import numpy as np
from time import time
from random import choice



#DATA_FOLDER = os.getenv('HOME') + '/source/github/KaggleSandbox/connect_x/' 
DATA_FOLDER = 'D:/Github/KaggleSandbox/connect_x/submission/'

from kaggle_environments.utils import structify
env = make("connectx", debug=True)
#env.render()

#board = obs.board
config = env.configuration    
columns = config.columns
rows = config.rows
size = rows * columns   

def play_moves(moves, board, config):    
    columns = config.columns
    rows = config.rows
    mark = 1
    for c in moves:  
        column = int(c)-1
        row = max([r for r in range(rows) if board[column + (r * columns)] == 0])
        board[column + (row * columns)] = mark
        mark = 3 - mark
    return mark

def print_board(board):
    for r in range(rows):
        print('-'.join([str(board[c + (r * columns)]) for c in range(columns)]) )


mark = 1
moves ='4444'        
debug_out = dict()
board = columns * rows * [0]
mark = play_moves(moves, board, config)    
obs = structify({'board':board, 'mark':mark})
negamax_agent_ex(obs, config)

obs['debug']

#%% Save debut table
import itertools

# 1: always start with middle column 4 
# 2: [1-7]
# 3: (1)[1-7] or 4[1-7]
# 4: (2)[1-7]
# 5: (3)[1-7]

#4th
[str(x1) + str(x2) for x1, x2, in itertools.product([str(k) + str(v) for k, v in moves.items() if len(k) == 1], range(1, 8))]

#5th
{str(x1) + str(x2):-1 for x1, x2, in itertools.product([str(k) + str(v) for k, v in moves.items() if len(k) == 2], range(1, 8))}

#6th
{str(x1) + str(x2):-1 for x1, x2, in itertools.product([str(k) + str(v) for k, v in moves.items() if len(k) == 3], range(1, 8))}

#moves are 1 based, value is column
moves = {'':4,
         '1':4,'2':3,'3':4,'4':4,'5':4,'6':5,'7':4,                   #2nd    
         '41':4,'42':2,'43':6,'44':4, '45':2, '46':2, '47':4,         #3rd
         '141':4,'142':4,'143':4,'144':4,'145':4,'146':4,'147':3,#4rd
         '231':3,'232':2,'233':3,'234':4,'235':3,'236':3,'237':3,
         '341':4,'342':4,'343':3,'344':4,'345':4,'346':4,'347':4,
         '441':4,'442':3,'443':2,'444':4,'445':3,'446':5,'447':4,
         '541':4,'542':4,'543':4,'544':5,'545':5,'546':4,'547':4,
         '651':2,'652':5,'653':5,'654':4,'655':5,'656':6,'657':5,
         '741':3,'742':4,'743':4,'744':4,'745':4,'746':4,'747':4,
         '4141': -1, '4142': -1, '4143': -1, '4144': -1, '4145': -1, '4146': -1, '4147': -1, '4221': -1, '4222': -1, '4223': -1, '4224': -1, '4225': -1, '4226': -1, '4227': -1, '4361': -1, '4362': -1, '4363': -1, '4364': -1, '4365': -1, '4366': -1, '4367': -1, '4441': -1, '4442': -1, '4443': -1, '4444': -1, '4445': -1, '4446': -1, '4447': -1, '4521': -1, '4522': -1, '4523': -1, '4524': -1, '4525': -1, '4526': -1, '4527': -1, '4621': -1, '4622': -1, '4623': -1,'4624': -1, '4625': -1, '4626': -1, '4627': -1, '4741': -1, '4742': -1, '4743': -1, '4744': -1, '4745': -1, '4746': -1, '4747': -1,
         '14141': -1, '14142': -1, '14143': -1, '14144': -1, '14145': -1, '14146': -1, '14147': -1, '14241': -1, '14242': -1, '14243': -1, '14244': -1, '14245': -1, '14246': -1, '14247': -1, '14341': -1, '14342': -1, '14343': -1, '14344': -1, '14345': -1, '14346': -1, '14347': -1, '14441': -1, '14442': -1, '14443': -1, '14444': -1, '14445': -1, '14446': -1, '14447': -1, '14541': -1, '14542': -1, '14543': -1, '14544': -1, '14545': -1, '14546': -1, '14547': -1, '14641': -1, '14642': -1, '14643': -1, '14644': -1, '14645': -1, '14646': -1, '14647': -1, '14731': -1, '14732': -1, '14733': -1, '14734': -1, '14735': -1, '14736': -1, '14737': -1, '23131': -1, '23132': -1, '23133': -1, '23134': -1, '23135': -1, '23136': -1, '23137': -1, '23221': -1, '23222': -1, '23223': -1, '23224': -1, '23225': -1, '23226': -1, '23227': -1, '23331': -1, '23332': -1, '23333': -1, '23334': -1, '23335': -1, '23336': -1, '23337': -1, '23441': -1, '23442': -1, '23443': -1, '23444': -1, '23445': -1, '23446': -1, '23447': -1, '23531': -1, '23532': -1, '23533': -1, '23534': -1, '23535': -1, '23536': -1, '23537': -1, '23631': -1, '23632': -1, '23633': -1, '23634': -1, '23635': -1, '23636': -1, '23637': -1, '23731': -1, '23732': -1, '23733': -1, '23734': -1, '23735': -1, '23736': -1, '23737': -1, '34141': -1, '34142': -1, '34143': -1, '34144': -1, '34145': -1, '34146': -1, '34147': -1, '34241': -1, '34242': -1, '34243': -1, '34244': -1, '34245': -1, '34246': -1, '34247': -1, '34331': -1, '34332': -1, '34333': -1, '34334': -1, '34335': -1, '34336': -1, '34337': -1, '34441': -1, '34442': -1, '34443': -1, '34444': -1, '34445': -1, '34446': -1, '34447': -1, '34541': -1, '34542': -1, '34543': -1, '34544': -1, '34545': -1, '34546': -1, '34547': -1, '34641': -1, '34642': -1, '34643': -1, '34644': -1, '34645': -1, '34646': -1, '34647': -1, '34741': -1, '34742': -1, '34743': -1, '34744': -1, '34745': -1, '34746': -1, '34747': -1, '44141': -1, '44142': -1, '44143': -1, '44144': -1, '44145': -1, '44146': -1, '44147': -1, '44231': -1, '44232': -1, '44233': -1, '44234': -1, '44235': -1, '44236': -1, '44237': -1, '44321': -1, '44322': -1, '44323': -1, '44324': -1, '44325': -1, '44326': -1, '44327': -1, '44441': -1, '44442': -1, '44443': -1, '44444': -1, '44445': -1, '44446': -1, '44447': -1, '44531': -1, '44532': -1, '44533': -1, '44534': -1, '44535': -1, '44536': -1, '44537': -1, '44651': -1, '44652': -1, '44653': -1, '44654': -1, '44655': -1, '44656': -1, '44657': -1, '44741': -1, '44742': -1, '44743': -1, '44744': -1, '44745': -1, '44746': -1, '44747': -1, '54141': -1, '54142': -1, '54143': -1, '54144': -1, '54145': -1, '54146': -1, '54147': -1, '54241': -1, '54242': -1, '54243': -1, '54244': -1, '54245': -1, '54246': -1, '54247': -1, '54341': -1, '54342': -1, '54343': -1, '54344': -1, '54345': -1, '54346': -1, '54347': -1, '54451': -1, '54452': -1, '54453': -1, '54454': -1, '54455': -1, '54456': -1, '54457': -1, '54551': -1, '54552': -1, '54553': -1, '54554': -1, '54555': -1, '54556': -1, '54557': -1, '54641': -1, '54642': -1, '54643': -1, '54644': -1, '54645': -1, '54646': -1, '54647': -1, '54741': -1, '54742': -1, '54743': -1, '54744': -1, '54745': -1, '54746': -1, '54747': -1, '65121': -1, '65122': -1, '65123': -1, '65124': -1, '65125': -1, '65126': -1, '65127': -1, '65251': -1, '65252': -1, '65253': -1, '65254': -1, '65255': -1, '65256': -1, '65257': -1, '65351': -1, '65352': -1, '65353': -1, '65354': -1, '65355': -1, '65356': -1, '65357': -1, '65441': -1, '65442': -1, '65443': -1, '65444': -1, '65445': -1, '65446': -1, '65447': -1, '65551': -1, '65552': -1, '65553': -1, '65554': -1, '65555': -1, '65556': -1, '65557': -1, '65661': -1, '65662': -1, '65663': -1, '65664': -1, '65665': -1, '65666': -1, '65667': -1, '65751': -1, '65752': -1, '65753': -1, '65754': -1, '65755': -1, '65756': -1, '65757': -1, '74131': -1, '74132': -1, '74133': -1, '74134': -1, '74135': -1, '74136': -1, '74137': -1, '74241': -1, '74242': -1, '74243': -1, '74244': -1, '74245': -1, '74246': -1, '74247': -1, '74341': -1, '74342': -1, '74343': -1, '74344': -1, '74345': -1, '74346': -1, '74347': -1, '74441': -1, '74442': -1, '74443': -1, '74444': -1, '74445': -1, '74446': -1, '74447': -1, '74541': -1, '74542': -1, '74543': -1, '74544': -1, '74545': -1, '74546': -1, '74547': -1, '74641': -1, '74642': -1, '74643': -1, '74644': -1, '74645': -1, '74646': -1, '74647': -1, '74741': -1, '74742': -1, '74743': -1, '74744': -1, '74745': -1, '74746': -1, '74747': -1
         }
        

debut_hashtable = {}

for move,col in moves.items():    
    board = columns * rows * [0]
    mark = 1
    if move != '':
        mark = play_moves(move, board, config)
    debut_hashtable[hash(tuple(board))] = col - 1
    
#%% Check Table
import sys
out = sys.stdout
#submission = utils.read_file(DATA_FOLDER + "submission_NEG_v9a.py")
submission = utils.read_file(DATA_FOLDER + "submission_NEG_v8b3.py")
my_agent = utils.get_last_callable(submission)

for move,col in moves.items():    
    board = columns * rows * [0]
    mark = 1
    if move != '':
        mark = play_moves(move, board, config)
    res = my_agent( structify({'board':board, 'mark':mark, 'remainingOverageTime':60}), config)
    print('move: %s, best: %d, solution: %d, mach: %s' % (move, col - 1, res, res == col -1) )
    #debut_hashtable[hash(tuple(board))] = col - 1